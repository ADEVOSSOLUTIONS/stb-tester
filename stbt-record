#!/usr/bin/python

import sys
from stbt import hauppauge, VirtualRemote, save_frame, virtual_remote_listen, ArgvHider

with ArgvHider():
    import pygst  # gstreamer
    pygst.require("0.10")
    import gst

import itertools

def main(argv):
    stb = argv[1]
    record(hauppauge(), virtual_remote_listen(), VirtualRemote(stb), sys.stdout)

def record(video_source, remote_input, control, script_out):
    count = itertools.count()
    old_key = None
    display = " ".join([video_source,
                        " ! tee name=t",
                        " ! queue leaky=2",
                        " ! ffmpegcolorspace",
                        " ! appsink name=screenshot "
                           "max-buffers=1 drop=true sync=false caps=video/x-raw-rgb",
                        " t. ! queue leaky=2 ! xvimagesink sync=false",
                        ])
    pipeline = gst.parse_launch(display)
    (screenshot,) = [x for x in pipeline.elements()
                     if x.get_name() == "screenshot"]
    pipeline.set_state(gst.STATE_PLAYING)
    while True:
        interrupt = False
        try:
            key = remote_input.next()
        except KeyboardInterrupt:
            interrupt = True
        buf = screenshot.get_property('last-buffer')
        control.press(key)
        if old_key:
            filename = '%04d-%s-complete.png' % (count.next(), old_key)
            save_frame(buf, filename)
            script_out.write("wait_for_match('%s')\n" % filename)
        if interrupt:
            return
        script_out.write("press('%s')\n" % key)
        old_key = key


if __name__ == "__main__":
    sys.exit(main(sys.argv))
